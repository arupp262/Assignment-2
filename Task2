import java.io.*;
import java.util.*;

class JobWithPriority implements Comparable<JobWithPriority> {
    int id, time, priority;

    JobWithPriority(int id, int time, int priority) {
        this.id = id;
        this.time = time;
        this.priority = priority;
    }

    @Override
    public int compareTo(JobWithPriority other) {
        if (this.priority == other.priority) {
            return Integer.compare(this.time, other.time);
        } else {
            return Integer.compare(this.priority, other.priority);
        }
    }
}

public class Task2Scheduler {

    public static void main(String[] args) throws IOException {
        List<JobWithPriority> jobs = new ArrayList<>();
        BufferedReader reader = new BufferedReader(new FileReader("task2-input.txt"));

        String line;
        while ((line = reader.readLine()) != null) {
            String[] parts = line.split(" ");
            int jobId = Integer.parseInt(parts[0]);
            int jobTime = Integer.parseInt(parts[1]);
            int jobPriority = Integer.parseInt(parts[2]);
            jobs.add(new JobWithPriority(jobId, jobTime, jobPriority));
        }

        Collections.sort(jobs);

        int totalTime = 0, completionTime = 0;
        System.out.print("Execution order: [");
        for (int i = 0; i < jobs.size(); i++) {
            JobWithPriority job = jobs.get(i);
            totalTime += job.time;
            completionTime += totalTime;
            System.out.print(job.id + (i == jobs.size() - 1 ? "" : ", "));
        }
        System.out.println("]");
        System.out.println("Average completion time: " + (double) completionTime / jobs.size());
    }
}
